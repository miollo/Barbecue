// <auto-generated />
using System;
using BarbecueSpace.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Barbecue.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20201006000547_FinalMigration")]
    partial class FinalMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("BarbecueSpace.Models.Barbecue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal?>("DrinkValue")
                        .HasColumnType("numeric");

                    b.Property<string>("Observations")
                        .HasColumnType("text");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Barbecues");
                });

            modelBuilder.Entity("BarbecueSpace.Models.BarbecuePerson", b =>
                {
                    b.Property<int>("BarbecueId")
                        .HasColumnType("integer");

                    b.Property<int>("PersonId")
                        .HasColumnType("integer");

                    b.Property<bool>("Drink")
                        .HasColumnType("boolean");

                    b.Property<bool>("Payed")
                        .HasColumnType("boolean");

                    b.HasKey("BarbecueId", "PersonId");

                    b.HasIndex("PersonId");

                    b.ToTable("BarbecuePeople");
                });

            modelBuilder.Entity("BarbecueSpace.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("People");
                });

            modelBuilder.Entity("BarbecueSpace.Models.BarbecuePerson", b =>
                {
                    b.HasOne("BarbecueSpace.Models.Barbecue", "Barbecue")
                        .WithMany("BarbecuePeople")
                        .HasForeignKey("BarbecueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BarbecueSpace.Models.Person", "Person")
                        .WithMany("BarbecuePeople")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
